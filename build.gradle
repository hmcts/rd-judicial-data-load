buildscript {
    ext {
        springBootVersion = '2.4.6'
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.11")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'pmd'
    id "com.github.ben-manes.versions" version "0.28.0"
    id 'info.solidsoft.pitest' version '1.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.sonarqube' version '2.8'
    id "org.flywaydb.flyway" version "6.2.0"
    id 'uk.gov.hmcts.java' version '0.12.0'
}

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"


def versions = [
        lombok             : '1.18.6',
        reformLogging      : '5.1.0',
        reformS2sClient    : '3.1.2',
        serenity           : '2.0.23',
        sonarPitest        : '0.5',
        springBoot         : '2.4.6',
        springHystrix      : '2.2.8.RELEASE',
        springfoxSwagger   : '2.9.2',
        jackson            : '2.11.4',
        launchDarklySdk    : "5.2.2",
        camel              : '3.8.0'
]

mainClassName = 'uk.gov.hmcts.reform.juddata.JudicialApplication'
def jarName = 'rd-judicial-data-load.jar'

group = 'uk.gov.hmcts.reform.juddata'
version = '0.0.1'

sourceCompatibility = 11
targetCompatibility = 11

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}


sourceSets {

    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDirs = [file('src/integrationTest/resources'), file ('src/functionalTest/resources')]
    }

    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime

}
check.dependsOn jacocoTestCoverageVerification

pmd {
    toolVersion = '6.12.0'
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.smokeTest, sourceSets.integrationTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = [
            'category/java/errorprone.xml',
            'category/java/bestpractices.xml'
    ]
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task functional(type: Test) {
    description = "Runs functional tests"
    group = "Verification"
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    finalizedBy aggregate
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}


pitest {
    junit5PluginVersion = '0.12'
    targetClasses = ['uk.gov.hmcts.reform.juddata.*']
    testSourceSets = [sourceSets.integrationTest, sourceSets.test]
    excludedClasses = [
            'uk.gov.hmcts.reform.juddata.configuration.*',
            'uk.gov.hmcts.reform.juddata.JudicialApplication',
            'uk.gov.hmcts.reform.juddata.camel.util.JrdExecutor',
            'uk.gov.hmcts.reform.juddata.client.*',
            'uk.gov.hmcts.reform.juddata.response.*',
            'uk.gov.hmcts.reform.juddata.camel.util.JobStatus',
            'uk.gov.hmcts.reform.juddata.camel.util.JrdConstants',
            'uk.gov.hmcts.reform.juddata.camel.util.PublishJudicialData',
            'uk.gov.hmcts.reform.juddata.camel.util.JrdExecutor',
            'uk.gov.hmcts.reform.juddata.camel.servicebus.TopicPublisher'
    ]
    threads = 6
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 85
    useClasspathFile = true
}


project.tasks['pitest'].group = "Verification"

sonarqube {
    properties {
        property "sonar.projectName", "RD :: Judicial Reference Data load"
        property "sonar.projectKey", "JUDDATA"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

        property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/juddata/configuration/**," +
                "src/main/java/uk/gov/hmcts/reform/juddata/JudicialApplication.java," +
                "src/main/java/uk/gov/hmcts/reform/juddata/client/**," +
                "src/main/java/uk/gov/hmcts/reform/juddata/response/**,"
    }
}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()

    maven {
        url "https://jitpack.io"
    }

}

dependencies {


    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: versions.springBoot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: versions.springBoot

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-batch', version: versions.springBoot
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.2'

    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.5.6'
    implementation (group: 'com.fasterxml.jackson.core', name: 'jackson-databind') {
        version {
            strictly versions.jackson
        }
    }
    implementation (group: 'com.fasterxml.jackson.core', name: 'jackson-core') {
        version {
            strictly versions.jackson
        }
    }
    implementation (group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '2.0.0')

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

    implementation "io.github.openfeign:feign-httpclient:11.0"
    implementation group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
    implementation group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0'

    implementation group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '2.3.3'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging

    implementation ('com.github.hmcts:data-ingestion-lib:0.4.5.2') {
        exclude group: 'org.glassfish', module: 'jakarta.el'
    }

    //Fix for CVE-2021-29425
    implementation 'commons-io:commons-io:2.8.0'
    implementation group: 'org.apache.camel', name: 'camel-bom', version: versions.camel, ext: 'pom'
    implementation group: 'org.apache.camel.springboot', name: 'camel-spring-boot-dependencies', version: versions.camel

    testImplementation group: 'com.microsoft.azure', name: 'azure-storage-blob', version: '11.0.0'

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.14'

    implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'

    implementation group: 'org.apache.commons', name: 'commons-vfs2', version: '2.4.1'
    implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    implementation group: 'com.opencsv', name: 'opencsv', version: '3.7'
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'

    implementation group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: versions.launchDarklySdk

    implementation group: 'com.azure', name: 'azure-core', version: '1.15.0'
    implementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.2.0'
    implementation group: 'io.projectreactor.netty', name: 'reactor-netty-core', version: '1.0.6'
    implementation group: 'io.projectreactor.netty', name: 'reactor-netty-http', version: '1.0.6'
    implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.4.5'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation("org.hamcrest:hamcrest-junit:2.0.0.0") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
        exclude group: "org.hamcrest", module: "hamcrest-library"
    }

    testImplementation (group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2') {
        exclude group: "com.sun.xml.bind", module: "jaxb-osgi"
    }
    testImplementation group: 'com.h2database', name: 'h2'
    //testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.4.6'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.11.2'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.4'
    testImplementation group: 'org.powermock', name: 'powermock-mockito-release-full', version: '1.5.4', ext: 'pom'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

    testImplementation group: 'org.springframework.batch', name: 'spring-batch-test', version: '4.3.1'

    testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
    testImplementation group: 'org.javatuples', name: 'javatuples', version: '1.2'

    testImplementation(group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity) {
        exclude group: 'com.vladsch.flexmark', module: 'flexmark-all'
        exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }
    testImplementation(group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity) {
        exclude group: 'com.vladsch.flexmark', module: 'flexmark-all'
        exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }
    testImplementation(group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity) {
        exclude group: 'com.vladsch.flexmark', module: 'flexmark-all'
        exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }

    testImplementation(group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity) {
        exclude group: 'com.vladsch.flexmark', module: 'flexmark-all'
        exclude group: 'javax.websocket', module: 'javax.websocket-api'
    }

    testImplementation group: 'org.apache.camel', name: 'camel-test-spring-junit5', version: versions.camel
    testImplementation group: 'org.apache.camel', name: 'camel-test-junit5', version: versions.camel
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.15.1'
    testImplementation group: 'org.postgresql', name: 'postgresql', version: '42.2.8'

    testImplementation(group: 'org.yaml', name: 'snakeyaml') {
        version {
            strictly '1.23'
        }
    }

    functionalTestImplementation(group: 'org.yaml', name: 'snakeyaml') {
        version {
            strictly '1.23'
        }
    }

    integrationTestImplementation(group: 'org.yaml', name: 'snakeyaml') {
        version {
            strictly '1.23'
        }
    }

    functionalTestCompile sourceSets.main.runtimeClasspath
    functionalTestCompile sourceSets.test.runtimeClasspath

    integrationTestCompile sourceSets.main.runtimeClasspath
    integrationTestCompile sourceSets.test.runtimeClasspath

    smokeTestCompile sourceSets.main.runtimeClasspath
    smokeTestCompile sourceSets.test.runtimeClasspath
}

dependencyManagement {

    dependencies {
        // CVE-2021-25122
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.50') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-el'
            entry 'tomcat-embed-websocket'
        }
    }
}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

gradle.startParameter.continueOnFailure = true

bootJar {
    archiveFileName = jarName
    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues.
// this setting only applies when running via gradle bootRun -- see web.config for the
// java flag that configures the deployed applications
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

// Fix for CVE-2021-21295 & need to be removed with new Azure blob version
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'io.netty'
                && details.requested.name != 'netty-tcnative-boringssl-static' ) {
            details.useVersion "4.1.63.Final"
        }
    }
}

test {
    useJUnitPlatform()
}

functional {
    useJUnitPlatform()
}

integration {
    useJUnitPlatform()
}

