#!groovy

@Library("Infrastructure")
import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "rd"
def component = "judicial-data-load"


static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

def vaultOverrides = [
    'preview' : 'aat',
    'spreview': 'saat'
]

def secrets = [
        'rd-${env}': [
                secret('ACCOUNT-KEY-PREVIEW', 'ACCOUNT_KEY_PREVIEW'),
                secret('ACCOUNT-NAME', 'ACCOUNT_NAME'),
                secret('ACCOUNT-KEY', 'ACCOUNT_KEY')
        ]
]

GradleBuilder builder = new GradleBuilder(this, product)
withPipeline(type, product, component) {

    overrideVaultEnvironments(vaultOverrides)

    onMaster {
        env.execution_environment = "aat"
    }
    onPR {
        env.execution_environment = "preview"
    }

    disableLegacyDeployment()
    enableAksStagingDeployment()

    nonServiceApp()

   after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('akschartsinstall') {
        def time = "120"
        echo "Waiting ${time} seconds for deployment to complete prior starting functional testing"
        sleep time.toInteger() // seconds
        try {
            builder.gradle('functional')
        } finally {
            junit '**/test-results/**/*.xml'
        }
    }

}
