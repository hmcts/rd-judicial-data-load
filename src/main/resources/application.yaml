server:
  port: ${PORT:8092}

spring:
  application:
    name: Judicial reference data blob store sync API
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  jackson.date-format: yyyy-MM-dd
  flyway.enabled: true
  flyway.locations: classpath:db/migration,classpath:db/postgres

  ### database configuration
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5456}/${POSTGRES_NAME:dbjuddata}${POSTGRES_CONNECTION_OPTIONS:}
    username: ${POSTGRES_USERNAME:dbjuddata}
    password: ${POSTGRES_PASSWORD:dbjuddata}
    properties:
      charSet: UTF-8
    tomcat:
      max-active: 10
      max-idle: 10
      min-idle: 2
      max-wait: 10000
      test-on-borrow: true
      test-on-connect: true
      test-on-idle: true
      validation-query: "SELECT 1"
      time-between-eviction-runs-millis: 10000
      test-while-idle: true
      test-on-return: true
      remove-abandoned: true
      remove-abandoned-timeout: 60
      log-abandoned: true
      abandon-when-percentage-full: 0

# Scheduler configuration
scheduler:
  config: ${CRON_SCHEDULE:*/1000 * * * * *}
  config2: ${CRON_SCHEDULE:*/1000 * * * * *}

### dependency configuration
auth.provider.service.client.baseUrl: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
idam:
  s2s-auth:
    totp_secret: ${S2S_SECRET:K6KA6PRLRFWQLSD6}
    microservice: rd_professional_api
    url: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}

security:
  anonymousPaths:
    - "/"
    - "/health"
    - "/health/liveness"
    - "/actuator/**"
    - "/loggers/**"
    - "/swagger-ui.html"
    - "/swagger-resources/**"
    - "/v2/api-docs"
    - "/webjars/springfox-swagger-ui/**"
    - "/search/**"
    - "/csrf"
    - "/error"
    - "/favicon.ico"
    - "/camel/routes/**"
  authorisedServices:
    - rd_professional_api
    - rd_user_profile_api

azure:
  storage:
    account-name: ${ACCOUNT_NAME:ACCOUNT_NAME}
    account-key: ${ACCOUNT_KEY:ACCOUNT_KEY}
    container-name: ${CONTAINER_NAME:CONTAINER_NAME}
    blob-url-suffix: ${BLOB_URL_SUFFIX:BLOB_URL_SUFFIX}

sftp:
  user-name: ${SFTP_USER_NAME:SFTP_USER_NAME}
  user-password: ${SFTP_USER_PASSWORD:SFTP_USER_PASSWORD}
  host: ${SFTP_HOST:SFTP_HOST}
  timeout: 60000
  file_names: ${SFTP_FILE:Courts.csv.gpg,Locations.csv.gpg,Personal.csv.gpg,Roles.csv.gpg}

gpg.password: ${GPG_PASSWORD:GPG_PASSWORD}
gpg.public-key: ${GPG_PUBLIC_KEY:GPG_PUBLIC_KEY}
gpg.private-key: ${GPG_PRIVATE_KEY:GPG_PRIVATE_KEY}